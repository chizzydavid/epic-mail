{"version":3,"sources":["../../../server/middlewares/validation/validation.js"],"names":["Validate","signUp","req","res","next","body","firstName","lastName","email","passwordOne","passwordTwo","errors","nameRegx","trim","push","test","length","status","json","login","password","sendMessage","subject","message","senderId","receiverId"],"mappings":"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","sourcesContent":["const Validate = {\r\n  signUp(req, res, next) {\r\n    const { firstName, lastName, email, passwordOne, passwordTwo } = req.body;\r\n    let errors = [];\r\n\r\n    const nameRegx = /^[a-zA-Z]{2,}$/;\r\n\r\n    firstName.trim() === '' ? errors.push('Please enter a first name updated version.') :\r\n      !nameRegx.test(firstName) ? errors.push('Please enter a valid first name') : '';\r\n\r\n    lastName.trim() === '' ? errors.push('Please enter a last name.') :\r\n      !nameRegx.test(lastName) ? errors.push('Please enter a valid last name.') : '';\r\n\r\n    email.trim() === '' ? errors.push('Please enter an email address.') : \r\n      !/^\\S+@\\S+\\.[a-zA-Z0-9]+$/.test(email.trim()) ? errors.push('Please enter a valid email address.') : '';\r\n\r\n\r\n    passwordOne.trim() === '' ? errors.push('Please enter a password') : \r\n      \r\n      passwordTwo.trim() === '' ? errors.push('Please re-enter your password.') :\r\n\r\n        passwordOne.trim().length < 6 ? errors.push('Your password must be at least 6 characters in length.') :\r\n\r\n          passwordOne.trim() !== passwordTwo.trim() ? errors.push('Your two passwords don\\'t match.') : \r\n          \r\n            !/^[\\w]{6,20}$/.test(passwordOne.trim()) ? errors.push('Your password can only contain alphanumeric characters.') : '';              \r\n\r\n\r\n    if (errors.length !== 0) \r\n      return res.status(400).json({ 'status': 400, 'error': errors });\r\n    \r\n    next();\r\n  },\r\n\r\n  login(req, res, next) {\r\n    const { email, password } = req.body;\r\n    let errors = [];\r\n\r\n    email.trim() === '' ? errors.push('Please enter an email address.') : \r\n      !/^\\S+@\\S+\\.[a-zA-Z0-9]+$/.test(email.trim()) ? errors.push('Please enter a valid email address.') : '';\r\n\r\n    password.trim() === '' ? errors.push('Please enter a password') : '';\r\n\r\n    if (errors.length !== 0) \r\n      return res.status(400).json({ 'status': 400, 'error': errors });\r\n    \r\n    next();\r\n  },\r\n\r\n  sendMessage(req, res, next) {\r\n    const { subject, message, senderId, receiverId } = req.body;\r\n    let errors = [];\r\n\r\n    subject.trim() === '' ? errors.push('Message must have a subject.') : '';\r\n\r\n    message.trim() === '' ? errors.push('Please enter a message to send.') : '';\r\n\r\n    senderId === '' ? errors.push('No sender specified.') : '';\r\n\r\n    receiverId === '' ? errors.push('Please enter the message recipient') : '';              \r\n\r\n\r\n    if (errors.length !== 0) \r\n      return res.status(400).json({ 'status': 400, 'error': errors });\r\n    \r\n    next();\r\n  },\r\n}\r\n\r\nexport default Validate;\r\n"],"file":"validation.js"}