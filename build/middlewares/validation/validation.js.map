{"version":3,"sources":["../../../server/middlewares/validation/validation.js"],"names":["Validate","signUp","req","res","next","body","firstName","lastName","email","passwordOne","passwordTwo","errors","nameRegx","trim","push","test","length","status","json","error","login","password","sendMessage","subject","message","senderId","receiverId"],"mappings":"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","sourcesContent":["const Validate = {\n  signUp(req, res, next) {\n    const {\n      firstName, lastName, email, passwordOne, passwordTwo,\n    } = req.body;\n    const errors = [];\n\n    const nameRegx = /^[a-zA-Z]{2,}$/;\n\n    firstName.trim() === '' ? errors.push('Please enter a first name updated version.')\n      : !nameRegx.test(firstName) ? errors.push('Please enter a valid first name') : '';\n\n    lastName.trim() === '' ? errors.push('Please enter a last name.')\n      : !nameRegx.test(lastName) ? errors.push('Please enter a valid last name.') : '';\n\n    email.trim() === '' ? errors.push('Please enter an email address.')\n      : !/^\\S+@\\S+\\.[a-zA-Z0-9]+$/.test(email.trim()) ? errors.push('Please enter a valid email address.') : '';\n\n\n    passwordOne.trim() === '' ? errors.push('Please enter a password')\n\n      : passwordTwo.trim() === '' ? errors.push('Please re-enter your password.')\n\n        : passwordOne.trim().length < 6 ? errors.push('Your password must be at least 6 characters in length.')\n\n          : passwordOne.trim() !== passwordTwo.trim() ? errors.push('Your two passwords don\\'t match.')\n\n            : !/^[\\w]{6,20}$/.test(passwordOne.trim()) ? errors.push('Your password can only contain alphanumeric characters.') : '';\n\n\n    if (errors.length !== 0) { res.status(400).json({ status: 400, error: errors }); return; }\n\n    next();\n  },\n\n  login(req, res, next) {\n    const { email, password } = req.body;\n    const errors = [];\n\n    email.trim() === '' ? errors.push('Please enter an email address.')\n      : !/^\\S+@\\S+\\.[a-zA-Z0-9]+$/.test(email.trim()) ? errors.push('Please enter a valid email address.') : '';\n\n    password.trim() === '' ? errors.push('Please enter a password') : '';\n\n    if (errors.length !== 0) { return res.status(400).json({ status: 400, error: errors }); }\n\n    next();\n  },\n\n  sendMessage(req, res, next) {\n    const {\n      subject, message, senderId, receiverId,\n    } = req.body;\n    const errors = [];\n\n    subject.trim() === '' ? errors.push('Message must have a subject.') : '';\n\n    message.trim() === '' ? errors.push('Please enter a message to send.') : '';\n\n    senderId === '' ? errors.push('No sender specified.') : '';\n\n    receiverId === '' ? errors.push('Please enter the message recipient') : '';\n\n\n    if (errors.length !== 0) { return res.status(400).json({ status: 400, error: errors }); }\n\n    next();\n  },\n};\n\nexport default Validate;\n"],"file":"validation.js"}