{"version":3,"sources":["../../../server/dummy/models/User.js"],"names":["User","users","user","token","Helper","generateToken","id","newUser","email","firstName","lastName","password","passwordOne","isAdmin","push","message","foundUser","find","dbuser","data","findUser","Number","index","indexOf","splice"],"mappings":";;;;;;;AAAA;;;;;;;;;;IAEMA,I;;;AACJ,kBAAc;AAAA;;AACZ,SAAKC,KAAL,GAAa,EAAb;AACD;;;;2BAEMC,I,EAAM;AACX,UAAMC,KAAK,GAAGC,gBAAOC,aAAP,CAAqBH,IAAI,CAACI,EAA1B,CAAd;;AACA,UAAMC,OAAO,GAAG;AACdD,QAAAA,EAAE,EAAEJ,IAAI,CAACI,EADK;AAEdE,QAAAA,KAAK,EAAEN,IAAI,CAACM,KAFE;AAGdC,QAAAA,SAAS,EAAEP,IAAI,CAACO,SAHF;AAIdC,QAAAA,QAAQ,EAAER,IAAI,CAACQ,QAJD;AAKdC,QAAAA,QAAQ,EAAET,IAAI,CAACU,WALD;AAMdC,QAAAA,OAAO,EAAEX,IAAI,CAACW,OANA;AAOdV,QAAAA,KAAK,EAALA;AAPc,OAAhB;AASA,WAAKF,KAAL,CAAWa,IAAX,CAAgBP,OAAhB;AACA,aAAO;AAAEQ,QAAAA,OAAO,EAAE,gCAAX;AAA6Cb,QAAAA,IAAI,EAAEK;AAAnD,OAAP;AACD;;;0BAGKL,I,EAAM;AACV,UAAMc,SAAS,GAAG,KAAKf,KAAL,CAAWgB,IAAX,CAAgB,UAAAC,MAAM;AAAA,eAAIA,MAAM,CAACV,KAAP,KAAiBN,IAAI,CAACM,KAA1B;AAAA,OAAtB,CAAlB;;AACA,UAAI,CAACQ,SAAL,EAAgB;AAAE,eAAO;AAAED,UAAAA,OAAO,EAAE;AAAX,SAAP;AAAuC;;AAEzD,UAAIC,SAAS,CAACL,QAAV,KAAuBT,IAAI,CAACS,QAAhC,EAA0C;AAAE,eAAO;AAAEI,UAAAA,OAAO,EAAE;AAAX,SAAP;AAAyC;;AAErF,aAAO;AAAEA,QAAAA,OAAO,EAAE,uBAAX;AAAoCb,QAAAA,IAAI,EAAEc;AAA1C,OAAP;AACD;;;8BAES;AACR,aAAO,KAAKf,KAAZ;AACD;;;6BAEQK,E,EAAI;AACX,aAAO,KAAKL,KAAL,CAAWgB,IAAX,CAAgB,UAAAf,IAAI;AAAA,eAAIA,IAAI,CAACI,EAAL,KAAYA,EAAhB;AAAA,OAApB,CAAP;AACD;;;2BAEMA,E,EAAIa,I,EAAM;AACf,UAAMjB,IAAI,GAAG,KAAKkB,QAAL,CAAcC,MAAM,CAACf,EAAD,CAApB,CAAb;AACAJ,MAAAA,IAAI,CAACM,KAAL,GAAaW,IAAI,CAACX,KAAL,IAAcN,IAAI,CAACM,KAAhC;AACAN,MAAAA,IAAI,CAACO,SAAL,GAAiBU,IAAI,CAACV,SAAL,IAAkBP,IAAI,CAACO,SAAxC;AACAP,MAAAA,IAAI,CAACQ,QAAL,GAAgBS,IAAI,CAACT,QAAL,IAAiBR,IAAI,CAACQ,QAAtC;AACAR,MAAAA,IAAI,CAACO,SAAL,GAAiBU,IAAI,CAACV,SAAL,IAAkBP,IAAI,CAACO,SAAxC;AACAP,MAAAA,IAAI,CAACS,QAAL,GAAgBQ,IAAI,CAACR,QAAL,IAAiBT,IAAI,CAACS,QAAtC;AACAT,MAAAA,IAAI,CAACW,OAAL,GAAeM,IAAI,CAACN,OAAL,IAAgBX,IAAI,CAACW,OAApC;AAEA,aAAO;AAAEE,QAAAA,OAAO,EAAE,2BAAX;AAAwCb,QAAAA,IAAI,EAAJA;AAAxC,OAAP;AACD;;;4BAEMI,E,EAAI;AACT,UAAMJ,IAAI,GAAG,KAAKkB,QAAL,CAAcd,EAAd,CAAb;AACA,UAAMgB,KAAK,GAAG,KAAKrB,KAAL,CAAWsB,OAAX,CAAmBrB,IAAnB,CAAd;AACA,WAAKD,KAAL,CAAWuB,MAAX,CAAkBF,KAAlB,EAAyB,CAAzB;AACA,aAAO,EAAP;AACD;;;;;;eAGY,IAAItB,IAAJ,E","sourcesContent":["import Helper from '../../controllers/Helper';\n\nclass User {\n  constructor() {\n    this.users = [];\n  }\n\n  create(user) {\n    const token = Helper.generateToken(user.id);\n    const newUser = {\n      id: user.id,\n      email: user.email,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      password: user.passwordOne,\n      isAdmin: user.isAdmin,\n      token,\n    };\n    this.users.push(newUser);\n    return { message: 'New user created successfully.', user: newUser };\n  }\n\n\n  login(user) {\n    const foundUser = this.users.find(dbuser => dbuser.email === user.email);\n    if (!foundUser) { return { message: 'User not found' }; }\n\n    if (foundUser.password !== user.password) { return { message: 'Invalid password' }; }\n\n    return { message: 'User login successful', user: foundUser };\n  }\n\n  findAll() {\n    return this.users;\n  }\n\n  findUser(id) {\n    return this.users.find(user => user.id === id);\n  }\n\n  update(id, data) {\n    const user = this.findUser(Number(id));\n    user.email = data.email || user.email;\n    user.firstName = data.firstName || user.firstName;\n    user.lastName = data.lastName || user.lastName;\n    user.firstName = data.firstName || user.firstName;\n    user.password = data.password || user.password;\n    user.isAdmin = data.isAdmin || user.isAdmin;\n\n    return { message: 'User updated successfully', user };\n  }\n\n  delete(id) {\n    const user = this.findUser(id);\n    const index = this.users.indexOf(user);\n    this.users.splice(index, 1);\n    return {};\n  }\n}\n\nexport default new User();\n"],"file":"User.js"}