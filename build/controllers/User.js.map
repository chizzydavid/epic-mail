{"version":3,"sources":["../../server/controllers/User.js"],"names":["User","createUser","req","res","newUser","UserModel","create","body","status","json","data","loginUser","email","password","userLogin","login","message","error","getAllUsers","users","findAll","getUser","user","findUser","Number","params","id","updateUser","updatedUser","update","deleteUser","ref","delete","send"],"mappings":"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","sourcesContent":["import UserModel from '../dummy/models/User';\n\nconst User = {\n  createUser(req, res) {\n    const newUser = UserModel.create(req.body);\n    return res.status(201).json({ status: 201, data: { ...newUser } });\n  },\n\n  loginUser(req, res) {\n    const { email, password } = req.body;\n\n    const userLogin = UserModel.login({ email, password });\n    if (userLogin.message === 'User not found') { return res.status(404).json({ status: 404, error: 'User not found.' }); }\n\n    if (userLogin.message === 'Invalid password') { return res.status(400).json({ status: 400, error: 'Invalid password.' }); }\n\n    return res.status(200).json({ status: 200, data: { ...userLogin } });\n  },\n\n  getAllUsers(req, res) {\n    const users = UserModel.findAll();\n    return res.status(200).json({ status: 200, data: [...users] });\n  },\n\n\n  getUser(req, res) {\n    const user = UserModel.findUser(Number(req.params.id));\n    if (!user) { return res.status(404).json({ status: 404, error: 'User not found.' }); }\n\n    return res.status(200).json({ status: 200, data: { ...user } });\n  },\n\n  updateUser(req, res) {\n    const user = UserModel.findUser(Number(req.params.id));\n    if (!user) { return res.status(404).json({ status: 404, error: 'User not found.' }); }\n\n    const updatedUser = UserModel.update(req.params.id, req.body);\n    return res.status(201).json({ status: 201, data: { ...updatedUser } });\n  },\n\n  deleteUser(req, res) {\n    const user = UserModel.findUser(Number(req.params.id));\n    if (!user) { return res.status(404).json({ status: 404, error: 'User not found.' }); }\n\n    const ref = UserModel.delete(req.params.id);\n    return res.status(204).send(ref);\n  },\n\n\n};\n\nexport default User;\n"],"file":"User.js"}