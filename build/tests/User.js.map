{"version":3,"sources":["../../server/tests/User.js"],"names":["chai","use","chaiHttp","should","url","token","describe","endPoint","it","done","user","email","firstName","lastName","password","confirmPassword","request","app","post","send","end","err","res","have","status","body","property","which","is","an","data","equal","before","get","set","delete"],"mappings":"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","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport app from '../server';\n\n// configure chai\nchai.use(chaiHttp);\nchai.should();\nconst url = '/api/v2/';\nlet token;\ndescribe('Testing User Endpoints /api/v2/', () => {\n  describe('POST/ auth/signup - Signup a User', () => {\n    const endPoint = 'auth/signup';\n    it('Should return status 201(Created) and a User token', (done) => {\n      const user = {\n        email: 'cindyroland@gmail.com',\n        firstName: 'Cindy',\n        lastName: 'Roland',\n        password: 'cindyroland',\n        confirmPassword: 'cindyroland',\n      };\n\n      chai.request(app)\n        .post(`${url}${endPoint}`)\n        .send(user)\n        .end((err, res) => {\n          res.should.have.status(201);\n          res.body.should.have.property('data').which.is.an('array');\n          res.body.data[0].should.have.property('token');\n          done();\n        });\n    });\n\n    it('Should return status 400(Bad Request) if user input is incomplete.', () => {\n      const user = {\n        email: '',\n        firstName: 'Cindy',\n        lastName: 'Roland',\n        password: 'cindyroland',\n        confirmPassword: 'cindyroland',\n      };\n\n      chai.request(app)\n        .post(`${url}${endPoint}`)\n        .send(user)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.have.property('error').which.is.an('array');\n        });\n    });\n  });\n\n  describe('POST/ auth/login - Login a User', () => {\n    const endPoint = 'auth/login';\n    it('Should return status 200(OK) and a User token', () => {\n      const user = {\n        email: 'cindyroland@gmail.com',\n        password: 'cindyroland',\n      };\n\n      chai.request(app)\n        .post(`${url}${endPoint}`)\n        .send(user)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('data').which.is.an('array');\n        });\n    });\n\n    it('Should return status 400(Bad Request) if user input is incomplete', () => {\n      const user = {\n        email: '',\n        password: 'cindyroland',\n      };\n\n      chai.request(app)\n        .post(`${url}${endPoint}`)\n        .send(user)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.have.property('error').which.is.an('array');\n        });\n    });\n\n    it('Should return status 400(Bad Request) if user email is invalid', () => {\n      const user = {\n        email: 'unknown@gmail.com',\n        password: 'cindyroland',\n      };\n\n      chai.request(app)\n        .post(`${url}${endPoint}`)\n        .send(user)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.have.property('error').equal('Invalid Login Credentials.');\n        });\n    });\n\n    it('Should return status 400(Bad Request) if user password in invalid', () => {\n      const user = {\n        email: 'cindyroland@gmail.com',\n        password: 'wrongpassword',\n      };\n\n      chai.request(app)\n        .post(`${url}${endPoint}`)\n        .send(user)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.have.property('error').equal('Invalid Login Credentials.');\n        });\n    });\n  });\n\n  describe('GET/ users - Get all Users', () => {\n    before((done) => {\n      const user = {\n        email: 'cindyroland@gmail.com',\n        password: 'cindyroland',\n      };\n      chai.request(app)\n        .post(`${url}auth/login`)\n        .send(user)\n        .end((err, res) => {\n          token = res.body.data[0].token;\n          done();\n        });\n    });\n    const endPoint = 'users';\n\n    it('Should return status 200(OK) and an array of User objects', (done) => {\n      chai.request(app)\n        .get(`${url}${endPoint}`)\n        .set('authorization', token)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('data').which.is.an('array');\n          done();\n        });\n    });\n  });\n\n  describe('GET/ users/:id - Get single User', () => {\n    const endPoint = 'users/';\n\n    it('Should return status 200(OK) and a User object', (done) => {\n      chai.request(app)\n        .get(`${url}${endPoint}1`)\n        .set('authorization', token)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('data').which.is.an('array');\n          done();\n        });\n    });\n\n    it('Should return status 404(Not Found) if User ID does not exist.', (done) => {\n      chai.request(app)\n        .get(`${url}${endPoint}60`)\n        .set('authorization', token)\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.have.property('error').equal('User not found.');\n          done();\n        });\n    });\n  });\n\n  describe('DELETE/ users/:id - Delete User', () => {\n    const endPoint = 'users/';\n\n    it('Should return status 200(Deleted)', (done) => {\n      chai.request(app)\n        .delete(`${url}${endPoint}1`)\n        .set('authorization', token)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('message').equal('User successfully deleted.');\n          done();\n        });\n    });\n\n    it('Should return status 404(Unauthorized access) if User ID is invalid', (done) => {\n      chai.request(app)\n        .delete(`${url}${endPoint}90`)\n        .set('authorization', token)\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.have.property('error').equal('User not found.');\n          done();\n        });\n    });\n  });\n});\n"],"file":"User.js"}