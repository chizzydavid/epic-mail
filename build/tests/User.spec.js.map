{"version":3,"sources":["../../server/tests/User.spec.js"],"names":["chai","use","chaiHttp","should","url","describe","token","endPoint","it","user","id","email","firstName","lastName","passwordOne","passwordTwo","isAdmin","request","app","post","send","end","err","res","have","status","body","property","which","is","an","password","equal","get","set","put","delete"],"mappings":"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","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../../server';\r\n\r\n// configure chai\r\nchai.use(chaiHttp);\r\nchai.should();\r\nconst url = '/api/v1/';\r\n\r\ndescribe('Testing User Endpoints /api/v1/', () => {\r\n  const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjUsImlhdCI6MTU1MTc1NzE4NX0.Lk-grtg76D3mroOGzXE5UuIt240hZLsKfRJWdIxNbc4';\r\n\r\n  // testing POST routes to create a new user\r\n  describe('POST/ auth/signup - Signup a User', () => {\r\n    const endPoint = 'auth/signup';\r\n    it('Should return status 201(Created) and a User object', () => {\r\n      const user = {\r\n        id: 5,\r\n        email: 'cindyroland@gmail.com',\r\n        firstName: 'Cindy',\r\n        lastName: 'Roland',\r\n        passwordOne: 'cindyroland',\r\n        passwordTwo: 'cindyroland',\r\n        isAdmin: false,\r\n      };\r\n\r\n      chai.request(app)\r\n        .post(`${url}${endPoint}`)\r\n        .send(user)\r\n        .end((err, res) => {\r\n          res.should.have.status(201);\r\n          res.body.should.have.property('data').which.is.an('object');\r\n        });\r\n    });\r\n\r\n    it('Should return status 400(Bad Request) if user input is incomplete.', () => {\r\n      const user = {\r\n        email: '',\r\n        firstName: 'Cindy',\r\n        lastName: 'Roland',\r\n        passwordOne: 'cindyroland',\r\n        passwordTwo: 'cindyroland',\r\n        isAdmin: false,\r\n      };\r\n\r\n      chai.request(app)\r\n        .post(`${url}${endPoint}`)\r\n        .send(user)\r\n        .end((err, res) => {\r\n          res.should.have.status(400);\r\n          res.body.should.have.property('error').which.is.an('array');\r\n        });\r\n    });\r\n  });\r\n\r\n  // testing POST routes to login a user\r\n  describe('POST/ auth/login - Login a User', () => {\r\n    const endPoint = 'auth/login';\r\n    it('Should return status 200(OK) and a User Object', () => {\r\n      const user = {\r\n        email: 'cindyroland@gmail.com',\r\n        password: 'cindyroland'\r\n      };\r\n\r\n      chai.request(app)\r\n        .post(`${url}${endPoint}`)\r\n        .send(user)\r\n        .end((err, res) => {\r\n          res.should.have.status(200);\r\n          res.body.should.have.property('data').which.is.an('object');\r\n        });\r\n    });\r\n\r\n    it('Should return status 400(Bad Request) if user input is incomplete', () => {\r\n      const user = {\r\n        email: '',\r\n        password: 'cindyroland'\r\n      };\r\n\r\n      chai.request(app)\r\n        .post(`${url}${endPoint}`)\r\n        .send(user)\r\n        .end((err, res) => {\r\n          res.should.have.status(400);\r\n          res.body.should.have.property('error').which.is.an('array');\r\n        });\r\n    });\r\n\r\n    it('Should return status 404(Not Found) if user email is invalid', () => {\r\n      const user = {\r\n        email: 'unknown@gmail.com',\r\n        password: 'cindyroland',\r\n      };\r\n\r\n      chai.request(app)\r\n        .post(`${url}${endPoint}`)\r\n        .send(user)\r\n        .end((err, res) => {\r\n          res.should.have.status(404);\r\n          res.body.should.have.property('error').equal('User not found.');\r\n        });\r\n    });\r\n\r\n    it('Should return status 400(Bad Request) if user password in invalid', () => {\r\n      const user = {\r\n        email: 'cindyroland@gmail.com',\r\n        password: 'wrongpassword',\r\n      };\r\n\r\n      chai.request(app)\r\n        .post(`${url}${endPoint}`)\r\n        .send(user)\r\n        .end((err, res) => {\r\n          res.should.have.status(400);\r\n          res.body.should.have.property('error').equal('Invalid password.');\r\n        });\r\n    });\r\n  });\r\n\r\n  // testing GET route to get all users\r\n  describe('GET/ users - Get all Users', () => {\r\n    const endPoint = 'users';\r\n\r\n    it('Should return status 200(OK) and an array of User objects', () => {\r\n      chai.request(app)\r\n        .get(`${url}${endPoint}`)\r\n        .set({ 'access-token': token })\r\n        .end((err, res) => {\r\n          res.should.have.status(200);\r\n          res.body.should.have.property('data').which.is.an('array');\r\n        });\r\n    });\r\n\r\n\r\n    it('Should return status 400(Bad Request) when there is no Token Provided', () => {\r\n      chai.request(app)\r\n        .get(`${url}${endPoint}`)\r\n        .end((err, res) => {\r\n          res.should.have.status(400);\r\n          res.body.should.have.property('error').equal('No Authentication Token Provided.');\r\n        });\r\n    });\r\n  });\r\n\r\n  // testing GET route to get a single user\r\n  describe('GET/ users/:id - Get single User', () => {\r\n    const endPoint = 'users/';\r\n\r\n    it('Should return status 200(OK) and a User object', () => {\r\n      chai.request(app)\r\n        .get(`${url}${endPoint}5`)\r\n        .set({ 'access-token': token })\r\n        .end((err, res) => {\r\n          res.should.have.status(200);\r\n          res.body.should.have.property('data').which.is.an('object');\r\n        });\r\n    });\r\n\r\n    it('Should return status 404(Not Found) if User ID is invalid.', () => {\r\n      chai.request(app)\r\n        .get(`${url}${endPoint}4`)\r\n        .set({ 'access-token': token })\r\n        .end((err, res) => {\r\n          res.should.have.status(404);\r\n          res.body.should.have.property('error').equal('User not found.');\r\n        });\r\n    });\r\n  });\r\n\r\n  // testing PUT route to update user data\r\n  describe('PUT/ users/:id - Update User', () => {\r\n    const endPoint = 'users/';\r\n    const user = {\r\n      id: 5,\r\n      email: 'cindyroland@gmail.com',\r\n      firstName: 'Cindy',\r\n      lastName: 'Roland',\r\n      password: 'updatedpassword',\r\n      isAdmin: false,\r\n    };\r\n\r\n    it('Should return status 201(Created) and a User object', () => {\r\n      chai.request(app)\r\n        .put(`${url}${endPoint}5`)\r\n        .set({ 'access-token': token })\r\n        .send(user)\r\n        .end((err, res) => {\r\n          res.should.have.status(201);\r\n          res.body.should.have.property('data').which.is.an('object');\r\n        });\r\n    });\r\n\r\n    it('Should return status 404(Not Found) if User ID is invalid', () => {\r\n      chai.request(app)\r\n        .put(`${url}${endPoint}4`)\r\n        .set({ 'access-token': token })\r\n        .send(user)\r\n        .end((err, res) => {\r\n          res.should.have.status(404);\r\n          res.body.should.have.property('error').equal('User not found.');\r\n        });\r\n    });\r\n  });\r\n\r\n\r\n  // testing DELETE route to delete a user\r\n  describe('DELETE/ users/:id - Delete User', () => {\r\n    const endPoint = 'users/';\r\n\r\n    it('Should return status 204(Deleted)', () => {\r\n      chai.request(app)\r\n        .delete(`${url}${endPoint}5`)\r\n        .set({ 'access-token': token })\r\n        .end((err, res) => {\r\n          res.should.have.status(204);\r\n        });\r\n    });\r\n\r\n    it('Should return status 404(Not Found) if User ID is invalid', () => {\r\n      chai.request(app)\r\n        .delete(`${url}${endPoint}4`)\r\n        .set({ 'access-token': token })\r\n        .end((err, res) => {\r\n          res.should.have.status(404);\r\n          res.body.should.have.property('error').equal('User not found.');\r\n        });\r\n    });\r\n  });\r\n});\r\n"],"file":"User.spec.js"}