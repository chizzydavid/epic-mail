{"version":3,"sources":["../../server/tests/Message.js"],"names":["chai","use","chaiHttp","should","senderToken","receiverToken","url","describe","before","done","user","email","firstName","lastName","password","confirmPassword","request","app","post","send","end","err","res","body","data","token","after","message","subject","recipient","set","it","have","status","property","which","is","an","equal","get","delete"],"mappings":"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","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport app from '../server';\n\nchai.use(chaiHttp);\nchai.should();\n\nlet senderToken; \nlet receiverToken;\nconst url = '/api/v2/messages';\n\ndescribe('Testing Message Endpoints /api/v2/messages', () => {\n  before((done) => {\n    const user = {\n      email: 'davidchizindu@gmail.com',\n      firstName: 'Chizindu',\n      lastName: 'David',\n      password: 'chizindudavid',\n      confirmPassword: 'chizindudavid',\n    };\n    chai.request(app)\n      .post('/api/v2/auth/signup')\n      .send(user)\n      .end(done);\n  });\n\n  before((done) => {\n    const user = {\n      email: 'tomcruise@gmail.com',\n      firstName: 'Tom',\n      lastName: 'Cruise',\n      password: 'tomcruise',\n      confirmPassword: 'tomcruise',\n    };\n    chai.request(app)\n      .post('/api/v2/auth/signup')\n      .send(user)\n      .end(done);\n  });\n\n  before((done) => {\n    const user = {\n      email: 'davidchizindu@gmail.com',\n      password: 'chizindudavid',\n    };\n    chai.request(app)\n      .post('/api/v2/auth/login')\n      .send(user)\n      .end((err, res) => {\n        senderToken = res.body.data[0].token;\n        done();\n      });\n  });\n\n  before((done) => {\n    const user = {\n      email: 'tomcruise@gmail.com',\n      password: 'tomcruise',\n    };\n    chai.request(app)\n      .post('/api/v2/auth/login')\n      .send(user)\n      .end((err, res) => {\n        receiverToken = res.body.data[0].token;\n        done();\n      });\n  });\n\n  after((done) => {\n    const message = {\n      subject: 'Hello Chizzy',\n      message: 'Send me a mail sometimeIt\\'s nice to meet you, Send me a mail sometime',\n      recipient: 'davidchizindu@gmail.com',\n    };\n\n    chai.request(app)\n      .post(`${url}`)\n      .set('authorization', receiverToken)\n      .send(message)\n      .end(done);\n  });\n\n  after((done) => {\n    const message = {\n      subject: 'David Where are you',\n      message: ' Hey man give me a call theHey mHey man give me a call theHey man give me a call theHey man give me a call thean give me a call theHey man give me a call theHey man give me a call theHey man give me a call theHey man give me a call theHey man give me a call the moment you get this. Let\\'s see if we can schedule a meet - up.',\n      recipient: 'davidchizindu@gmail.com',\n    };\n\n    chai.request(app)\n      .post(`${url}`)\n      .set('authorization', receiverToken)\n      .send(message)\n      .end(done);\n  });\n\n  after((done) => {\n    const message = {\n      subject: 'Hey Tom Whatsup',\n      message: ' Hey man give me a call the moment you get this. Let\\'s see if we can schedule a meet - upHey man give me a call theHey man give me a call theHey man give me a call theHey man give me a call theHey man give me a call theHey man give me a call theHey man give me a call theHey man give me a call the.',\n      recipient: 'tomcruise@gmail.com',\n    };\n\n    chai.request(app)\n      .post(`${url}`)\n      .set('authorization', senderToken)\n      .send(message)\n      .end(done);\n  });\n\n  describe('POST/ - Send a Message', () => {\n    it('Should return status 201(Created) and a Message object', (done) => {\n      const message = {\n        subject: 'Hello Mail',\n        message: \"It's nice to meet you, Send me a mail sometime.\",\n        recipient: 'tomcruise@gmail.com',\n      };\n\n      chai.request(app)\n        .post(`${url}`)\n        .set('authorization', senderToken)\n        .send(message)\n        .end((err, res) => {\n          res.body.should.have.status(201);\n          res.body.should.have.property('data').which.is.an('array');\n          done();\n        });\n    });\n\n    it('Should return status 201(Created) and a Message object', (done) => {\n      const message = {\n        subject: 'Hello Mail',\n        message: \"It's nice to meet you, Send me a mail sometime.\",\n        recipient: 'tomcruise@gmail.com',\n      };\n\n      chai.request(app)\n        .post(`${url}`)\n        .set('authorization', senderToken)\n        .send(message)\n        .end((err, res) => {\n          res.body.should.have.status(201);\n          res.body.should.have.property('data').which.is.an('array');\n          done();\n        });\n    });\n\n    it('Should return status 400(Bad Request) if user input incomplete.', () => {\n      const message = {\n        subject: 'Hello Mail',\n        message: 'my mail app rocks',\n        recipient: '',\n      };\n\n      chai.request(app)\n        .post(`${url}`)\n        .set('authorization', senderToken)\n        .send(message)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.have.property('error').which.is.an('array');\n        });\n    });\n\n    it('Should return status 400(Bad Request) when there is no Token Provided', () => {\n      const message = {\n        subject: 'Hello Mail',\n        message: 'It\\'s nice to meet you, Send me a mail sometime.',\n        recipient: 'cindy@gmail.com',\n      };\n\n      chai.request(app)\n        .post(`${url}`)\n        .send(message)\n        .end((err, res) => {\n          res.should.have.status(401);\n          res.body.should.have.property('error').equal('No Authentication Token Provided.');\n        });\n    });\n  });\n\n  describe('POST/ - Save message as draft', () => {\n    it('Should return status 201(Created) and a Message(draft) object', (done) => {\n      const message = {\n        subject: '',\n        message: '',\n        recipient: 'tomcruise@gmail.com',\n      };\n\n      chai.request(app)\n        .post(`${url}/draft`)\n        .set('authorization', senderToken)\n        .send(message)\n        .end((err, res) => {\n          res.body.should.have.status(201);\n          res.body.should.have.property('data').which.is.an('array');\n          done();\n        });\n    });\n\n    it('Should return status 400(Bad Request) if user input incomplete/empty.', (done) => {\n      const message = {\n        subject: '',\n        message: '',\n        recipient: '',\n      };\n\n      chai.request(app)\n        .post(`${url}`)\n        .set('authorization', senderToken)\n        .send(message)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.have.property('error').which.is.an('array');\n          done();\n        });\n    });\n\n    it('Should return status 400(Bad Request) if receiver\\'s email is invalid.', (done) => {\n      const message = {\n        subject: '',\n        message: '',\n        recipient: 'tomcruisegmail.com',\n      };\n\n      chai.request(app)\n        .post(`${url}/draft`)\n        .set('authorization', senderToken)\n        .send(message)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.have.property('error').which.is.an('array');\n          done();\n        });\n    });\n  });\n\n  describe('GET/ - Get all recieved messages', () => {\n    it('Should return status 200(OK) and an array of messages', (done) => {\n      chai.request(app)\n        .get(`${url}`)\n        .set('authorization', receiverToken)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('data').which.is.an('array');\n          done();\n        });\n    });\n  });\n\n  describe('GET/ unread - Get all unread messages', () => {\n    it('Should return status 200(OK) and an array of messages', (done) => {\n      chai.request(app)\n        .get(`${url}/unread`)\n        .set('authorization', receiverToken)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('data').which.is.an('array');\n          done();\n        });\n    });\n  });\n\n  describe('GET/ drafts - Get all drafts', () => {\n    it('Should return status 200(OK) and an array of drafts', (done) => {\n      chai.request(app)\n        .get(`${url}/draft`)\n        .set('authorization', senderToken)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('data').which.is.an('array');\n          done();\n        });\n    });\n\n\n    it('Should return status 200(OK) and an message - You have no draft message', (done) => {\n      chai.request(app)\n        .get(`${url}/draft`)\n        .set('authorization', receiverToken)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('message').equal('You have no draft messages.');\n          done();\n        });\n    });\n  });\n\n  describe('GET/ sent - Get all sent messages', () => {\n    it('Should return status 200(OK) and an array of messages', (done) => {\n      chai.request(app)\n        .get(`${url}/sent`)\n        .set('authorization', senderToken)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('data').which.is.an('array');\n          done();\n        });\n    });\n  });\n\n  describe('GET/ :id - Get a single Message', () => {\n    it('Should return status 200(OK) and a single message object', (done) => {\n      chai.request(app)\n        .get(`${url}/1`)\n        .set('authorization', senderToken)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('data').which.is.an('array');\n          done();\n        });\n    });\n\n    it('Should return status 404(Not Found) if Message ID is invalid.', (done) => {\n      chai.request(app)\n        .get(`${url}/500`)\n        .set('authorization', senderToken)\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.have.property('error').equal('Message not found.');\n          done();\n        });\n    });\n  });\n\n  describe('DELETE/ retract/:id - Retract a sent Message', () => {\n    it('Should return status 200(OK) and a message of success', (done) => {\n      chai.request(app)\n        .delete(`${url}/retract/1`)\n        .set('authorization', senderToken)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('message').equal('Message successfully retracted.');\n          done();\n        });\n    });\n  });\n\n  describe('DELETE/ sent/:id - Delete a sent Message', () => {\n    it('Should return status 200(OK) and a message of success', (done) => {\n      chai.request(app)\n        .delete(`${url}/sent/1`)\n        .set('authorization', senderToken)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('message').equal('Message successfully deleted.');\n          done();\n        });\n    });\n  });\n\n\n  describe('DELETE/ :id - Delete a received Message', () => {\n    it('Should return status 200(Message deleted successfully)', (done) => {\n      chai.request(app)\n        .delete(`${url}/2`)\n        .set('authorization', receiverToken)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('message').equal('Message successfully deleted.');\n          done();\n        });\n    });\n\n    it('Should return status 404(Not found) if Message ID is invalid', (done) => {\n      chai.request(app)\n        .delete(`${url}/500`)\n        .set('authorization', receiverToken)\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.have.property('error').equal('Message not found.');\n          done();\n        });\n    });\n  });\n});\n"],"file":"Message.js"}