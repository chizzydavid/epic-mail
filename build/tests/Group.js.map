{"version":3,"sources":["../../server/tests/Group.js"],"names":["chai","use","chaiHttp","should","token","creatorToken","url","describe","before","done","user","email","firstName","lastName","password","confirmPassword","request","app","post","send","end","err","res","body","data","after","group","name","description","members","set","it","have","status","property","which","is","an","equal","get","put","users","delete","message","subject"],"mappings":"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","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport app from '../server';\n\nchai.use(chaiHttp);\nchai.should();\n\nlet token; let\n  creatorToken;\nconst url = '/api/v2/groups';\n\ndescribe('Testing Group Endpoints /api/v2/groups', () => {\n  before((done) => {\n    const user = {\n      email: 'johnsnow@gmail.com',\n      firstName: 'John',\n      lastName: 'Snow',\n      password: 'johnsnow',\n      confirmPassword: 'johnsnow',\n    };\n    chai.request(app)\n      .post('/api/v2/auth/signup')\n      .send(user)\n      .end(done);\n  });\n\n  before((done) => {\n    const user = {\n      email: 'johnsnow@gmail.com',\n      password: 'johnsnow',\n    };\n    chai.request(app)\n      .post('/api/v2/auth/login')\n      .send(user)\n      .end((err, res) => {\n        token = res.body.data[0].token;\n        done();\n      });\n  });\n\n  before((done) => {\n    const user = {\n      email: 'davidchizindu@gmail.com',\n      password: 'chizindudavid',\n    };\n    chai.request(app)\n      .post('/api/v2/auth/login')\n      .send(user)\n      .end((err, res) => {\n        creatorToken = res.body.data[0].token;\n        done();\n      });\n  });\n\n\n  after((done) => {\n    const group = {\n      name: 'Port Harcourt Dudes',\n      description: 'New group for all my dudes in port harcourt.',\n      members: [2, 4],\n    };\n\n    chai.request(app)\n      .post(`${url}`)\n      .set('authorization', creatorToken)\n      .send(group)\n      .end(done);\n  });\n\n  after((done) => {\n    const group = {\n      name: 'Bootcamp Guys',\n      description: 'New group for all my bootcamp buddies.',\n      members: [2, 4],\n    };\n\n    chai.request(app)\n      .post(`${url}`)\n      .set('authorization', creatorToken)\n      .send(group)\n      .end(done);\n  });\n\n\n  describe('POST/ - Create a Group', () => {\n    it('Should return status 201(Created) and a Group object', (done) => {\n      const group = {\n        name: 'Bootcamp Guys',\n        description: 'New group for all my bootcamp buddies.',\n        members: [2, 4],\n      };\n\n      chai.request(app)\n        .post(`${url}`)\n        .set('authorization', token)\n        .send(group)\n        .end((err, res) => {\n          res.body.should.have.status(201);\n          res.body.should.have.property('data').which.is.an('array');\n          done();\n        });\n    });\n\n    it('Should return status 400(Bad Request) if user input incomplete.', (done) => {\n      const group = {\n        name: 'Hello Mail',\n        description: '  ',\n      };\n      chai.request(app)\n        .post(`${url}`)\n        .set('authorization', token)\n        .send(group)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.have.property('error').which.is.an('array');\n          done();\n        });\n    });\n\n    it('Should return status 400(Bad Request) when there is no Token Provided', (done) => {\n      const group = {\n        name: 'Hello Mail',\n        description: 'Mailing group',\n      };\n\n      chai.request(app)\n        .post(`${url}`)\n        .send(group)\n        .end((err, res) => {\n          res.should.have.status(401);\n          res.body.should.have.property('error').equal('No Authentication Token Provided.');\n          done();\n        });\n    });\n  });\n\n  describe('GET/ - Get all user groups', () => {\n    it('Should return status 200(OK) and an array of user groups', (done) => {\n      chai.request(app)\n        .get(`${url}`)\n        .set('authorization', token)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('data').which.is.an('array');\n          done();\n        });\n    });\n  });\n\n  describe('GET/ :groupId - Edit Group Name', () => {\n    it('Should return status 200(OK) and the Updated group', (done) => {\n      const group = {\n        name: 'Hello Mail updated',\n        description: 'Mailing group edited',\n      };\n\n      chai.request(app)\n        .put(`${url}/1`)\n        .set('authorization', token)\n        .send(group)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('data').which.is.an('array');\n          done();\n        });\n    });\n  });\n\n  describe('GET/ :groupId/users - Add new users to a group', () => {\n    it('Should return status 201(OK) and a message of success.', (done) => {\n      chai.request(app)\n        .post(`${url}/1/users`)\n        .set('authorization', token)\n        .send({ members: [3, 6] })\n        .end((err, res) => {\n          res.should.have.status(201);\n          res.body.should.have.property('data').which.is.an('array');\n          done();\n        });\n    });\n\n    it('Should return status 404(Not Found) and \\'Group not found\\' if Group Id doesnt exist.', (done) => {\n      chai.request(app)\n        .post(`${url}/1000/users`)\n        .set('authorization', token)\n        .send({ users: [3, 6] })\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.have.property('error').equal('Group not found.');\n          done();\n        });\n    });\n  });\n\n  describe('DELETE/ :groupId/users/:id - Delete a user from a group', () => {\n    it('Should return status 200(OK) and a message of success.', (done) => {\n      chai.request(app)\n        .delete(`${url}/1/users/6`)\n        .set('authorization', token)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('message').equal('User deleted successfully.');\n          done();\n        });\n    });\n\n    it('Should return status 404(Not Found) and \\'Group not found\\' if Group Id doesnt exist.', (done) => {\n      chai.request(app)\n        .delete(`${url}/1000/users/6`)\n        .set('authorization', token)\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.have.property('error').equal('Group not found.');\n          done();\n        });\n    });\n\n    it('Should return status 404(Not Found) and \\'User is not a member of this group\\' if user isnt part of the group', (done) => {\n      chai.request(app)\n        .delete(`${url}/1/users/6000`)\n        .set('authorization', token)\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.have.property('error').equal('User is not a member of this group.');\n          done();\n        });\n    });\n  });\n\n  describe('POST/ :groups/:groupId/messages - Send message to a group', () => {\n    it('Should return status 201(Created) and a Message object', (done) => {\n      const message = {\n        subject: 'Hello Bootcamp guys',\n        message: 'Hey bootcampers, hope you guys are having a splendid time.',\n      };\n\n      chai.request(app)\n        .post(`${url}/1/messages`)\n        .set('authorization', token)\n        .send(message)\n        .end((err, res) => {\n          res.body.should.have.status(201);\n          res.body.should.have.property('data').which.is.an('array');\n          done();\n        });\n    });\n\n    it('Should return status 404(Not Found) and \\'Group not found\\'', (done) => {\n      const message = {\n        subject: 'Hello Bootcamp guys',\n        message: 'Hellot all my bootcamp men and women.',\n      };\n\n      chai.request(app)\n        .post(`${url}/1000/messages`)\n        .set('authorization', token)\n        .send(message)\n        .end((err, res) => {\n          res.body.should.have.status(404);\n          res.body.should.have.property('error').equal('Group not found.');\n          done();\n        });\n    });\n  });\n\n  describe('GET /:groupId - Get a single Group', () => {\n    it('Should return status 200(OK) and a single group object', (done) => {\n      chai.request(app)\n        .get(`${url}/1`)\n        .set('authorization', token)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('data').which.is.an('array');\n          done();\n        });\n    });\n\n    it('Should return status 404(Not Found) if Group ID is invalid.', (done) => {\n      chai.request(app)\n        .get(`${url}/5000`)\n        .set('authorization', token)\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.have.property('error').equal('Group not found.');\n          done();\n        });\n    });\n  });\n\n  describe('DELETE/ :groupId - Delete a Group', () => {\n    it('Should return status 200(Group deleted successfully)', (done) => {\n      chai.request(app)\n        .delete(`${url}/1`)\n        .set('authorization', token)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('message').equal('Group deleted successfully.');\n          done();\n        });\n    });\n\n    it('Should return status 404(Not found) if Group ID is invalid', (done) => {\n      chai.request(app)\n        .delete(`${url}/500`)\n        .set('authorization', token)\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.have.property('error').equal('Group not found.');\n          done();\n        });\n    });\n  });\n});\n"],"file":"Group.js"}