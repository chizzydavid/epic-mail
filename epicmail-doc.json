{
  "swagger": "2.0",
  "info": {
    "description": "Epic Mail is a web application designed to make sending and receiving email messages much more efficient and user friendly.",
    "version": "1.0.0",
    "title": "Epic Mail"
  },
  "host": "chizzy-epicmail.herokuapp.com",
  "basePath": "/api/v1/",
  "tags": [
    {
      "name": "User",
      "description": "All operations endpoints linked to users"
    },
    {
      "name": "Message",
      "description": "Endpoints for messages"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/auth/signp": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create new user",
        "description": "User enters valid credentials to signup.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New user object to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User-Signup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User successfuly created.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The email and password for login",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User-Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully logged in.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users",
        "description": "Gets all users in the database.",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by id",
        "description": "Returns user object",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Updates a user",
        "description": "Supplies a body of updated data.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User-Signup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User info successfully updated."
          },
          "400": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user",
        "description": "Deletes User with passed id.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the user that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "User successfully deleted"
          },
          "400": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/messages": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Add/Sends a new message to the database.",
        "description": "Sends message to another user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New message to be sent",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Message-Body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Gets all received messages for a user",
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          }
        }
      }
    },
    "/messages/unread": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Gets all received messages for a user",
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          }
        }
      }
    },
    "/messages/sent": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Gets all sent messages for a user",
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          }
        }
      }
    },
    "/messages/{id}": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Gets a single message by id",
        "description": "Returns a single message",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of message to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "400": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "Message not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Message"
        ],
        "summary": "Deletes a message",
        "description": "Deletes a message from the database",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pet id to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted."
          },
          "400": {
            "description": "Invalid id supplied."
          },
          "404": {
            "description": "Message not found."
          }
        }
      }
    }
  },
  "definitions": {
    "Message": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "subject": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "parentMessageId": {
          "type": "integer"
        },
        "senderId": {
          "type": "integer"
        },
        "receiverId": {
          "type": "integer"
        },
        "createdOn": {
          "type": "integer"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "Message-Body": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "parentMessageId": {
          "type": "integer"
        },
        "senderId": {
          "type": "integer"
        },
        "receiverId": {
          "type": "integer"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "User-Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "User-Signup": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  }
}